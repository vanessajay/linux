<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xml:lang="pt-br" xmlns="http://www.w3.org/1999/xhtml" lang="pt-br"><head>


<title>.:TWikiBarPapo005 &gt; TWikiBar &gt; Aqui temos um _livro livre_ e
 completo sobre _Shell_:.</title>
<link rel="shortcut icon" 
href="http://wiki.softwarelivre.org/pub/TWikiBar/FreeSkinImagens/favicon.ico"
 type="image/x-icon">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta name="Keywords" content="brasil, software, livre, liberdade, 
copyleft, gnu, linux, grupo, bash, shell, Julio, Cezar, Neves, venda, 
aluguel, casa, Arraial, do, Cabo">
<meta name="Description" content="Os sedentos do " saber="" livre="" 
são="" muito="" benvindos.="">
<meta http-equiv="pragma" content="no-cache">
<meta http-equiv="cache-control" content="no-cache">
<meta name="author" content="Julio Cezar Neves">
<!-- base href="http://wiki.softwarelivre.org/TWikiBar/TWikiBarPapo005" -->
</head><body>\
<style type="text/css" media="all">

/* elementos HTML básicos */

html body {
  line-height:1.55em;
  font-family: "Bitstream Vera Sans", "Lucida Grande", verdana, lucida, helvetica, sans-serif;
  background-color: #f8f8f8;
  margin:0;
  padding:0;
  font-size:x-small;
  voice-family:"\"}\""; 
  voice-family:inherit;
  font-size:small;
}

html>body {
  font-size:small;   
}

/* be kind to netscape 4 that doesn't understand inheritance */
body, p, li, ul, ol, dl, dt, dd, acronym, h1, h2, h3, h4, h5, h6 {
   background-color:transparent;
}
p {
   margin:1em 0 0 0;
}
table {
   border-collapse: separate;
   background-color: #000000;
}

table.destaque {
   border-collapse: separate;
   background-color: #ffffcc !important;
}

#SearchResultsTable table,
#SearchResultsTable tr,
#SearchResultsTable td{
   background-color: #ffffff !important;
}

strong, b {
   font-weight:bold;
}
hr {
   color:#9E9E70;
   background-color:#9E9E70;
   height:1px;
   border:none;
}
pre, code, tt {
   font-size:100%;
   line-height:1.4em;
   color:#7A4707;
}
pre {
   margin-top:1em;
   margin-bottom:1em;
}

/* Text */

h1, h2, h3, h4, h5, h6 {
   font-family:"Lucida Grande", helvetica, lucida, verdana, sans-serif;
   line-height:104%;
   padding:0;
   margin:1em 0 0.1em 0;
}
h1 {
   font-size:210%;
   color:#e24628;
   margin:0 0 0.1em 0;
}
h2 {
   font-size:145%;
   display:block;
   background-color:#F3EDE7;
   color:#900;
   padding:0.2em 0.7em;
   margin:1em 0.7em 0.15em 0.7em;
   height:auto;
}
h3 { font-size:140%; color:#900;}
h4 { font-size:125%; color:#900;}
h5 { font-size:110%; color:#900;}
h6 { font-size:95%; color:#900;}

/* Links */

:link:focus,
:visited:focus,
:link,
:visited,
:link:active,
:visited:active {
   text-decoration:none;
   color:#1e5bbd;
   background-color:transparent;
}
:link:hover,
:visited:hover {
   text-decoration:underline;
   background-color:#b4d5ff;
   color:#1559B3;
}
a:link img,
a:visited img,
a:hover img,
a:active img {
   background-color:transparent;
}
th a:link,
th a:visited {
   font-weight:bold;
}

/* ----------------------------------------
   Referências à Menu de Contexto
   Fonte: http://br.mozdev.org/thunderbird/vocesabia/?privacidade 
          http://br.mozdev.org/images/html/br.css
---------------------------------------- */

kbd {
  padding: 0px 1px 0px 1px !important;
  border-width: 1px 2px 2px 1px !important;
  border-style: solid !important;
  background: #faf6f6  !important;
  color: #000  !important;
  border-color:  #edd #baa #baa #eed  !important;
}

/* ----------------------------------------
   Estilo para tooltip em links
   Fonte: http://loadaveragezero.com/vnav/labs/CSS/tooltips.php
---------------------------------------- */

span.tool {
  position: relative;   /* this is key */
  cursor: help;
}
 
span.tool span.tip {
  display: none;        /* so is this */
}

/* tooltip will display on :hover event */

span.tool:hover span.tip {
  display: block;
  z-index: 100;
  position: absolute;
  top: 2.5em;
  left: 0;
  width: auto;
  line-height: 1.2em;
  padding: 3px 7px 4px 6px;
  border: 1px solid #336;
  background-color: #f7f7ee;
  font-size: 12px;
  font-weight: normal;
  color: #000;
  text-align: left;
}

#content span.tool:after {
  padding-left: 2px;            /* eye candy */
  content: url(http://wiki.softwarelivre.org/pub/TWiki/TWikiDocGraphics/bubble.gif);
}

/* ----------------------------------------
   Estilo para caixa div de código code-box 
   Fonte: http://loadaveragezero.com/vnav/labs/CSS/code.php
---------------------------------------- */

.code-box {
  font-family: 'Lucida Console', 'Bitstream Vera Sans Mono', 'Courier New', Monaco, Courier, monospace;
  width: 100%;
  border: 1px dashed #aaa8a8;
  padding: 0.5em 0 0.3em 0.5em;
  color: #000;
  overflow: auto;
  background: #fff url(http://wiki.softwarelivre.org/pub/TWiki/TWikiDocGraphics/hand.gif) no-repeat top right;
}

/* ----------------------------------------
   Estilos das Divisões
---------------------------------------- */

.geral {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
}

.cabecalho { }

.padraogoverno {
  border:1px solid #FFCC00;
  background-color: #FFCC00;
  text-align: center;
}

.padraocabecalho {
  border:1px solid #669966; /* verde pálido */
/*  text-align: center; */
  background: #FFF url(http://wiki.softwarelivre.org/pub/TWikiBar/FreeSkinImagens/6aEdicao.PNG) right top no-repeat;
  color: #FFF;
  min-height: 105px; /* tamanho da logo */
}

.corpo {
  position: relative;
  top:0;
  left:0;
}

.lateral {
  position: absolute;
  background-color: #FFFAFF; /* rosa claríssimo */

  width: 12.5em; /* 0.5em à mais do menuL */

  z-index:1; /* forçar estar acima dos demais */
}

.barranavegacao {
  background-color: #CDCE9C;
}

.topico {
  position: relative;
  padding-left:1em;
  padding-bottom:1em;
  margin-left: 13.1em; /* deslocado 1em à direita do menuL */
  min-height: 20em;

/*  overflow: auto; */

  border:1px solid #000;
  background-color: #FFF;
}

.localizacao {
  margin-left: 13.1em; /* deslocado 1em à direita do menuL */
  padding-left:1em;

  border:1px solid #E6E6E6; /* cinza claro */
  background-color: #E6E6E6;
}

.edicao {
  margin-left: 13.1em; /* deslocado 1em à direita do menuL */
  padding-left:1em;

  border:1px solid #EEF6FF;
  background-color: #EEF6FF; /* azul claríssimo */
}

.rodape {
  margin-left: 13.1em; /* deslocado 1em à direita do menuL */
  padding-left:1em;

  text-align: center;

  border:1px solid #FFFAFF;
  background-color: #FFFAFF; /* rosa claríssimo */
}

/* ----------------------------------------
   Barra de Navegacao através de listas.
   http://www.maujor.com/tutorial/cssmenu.php
---------------------------------------- */
#menuH ul {
  border:none;
  margin: 0;
  padding: 0;
  text-align:left;
}

#menuH ul li {
  list-style: none;
  margin: 0;
  display: inline;
}

#menuH ul li a {
  height:1px; /* IE5.0 bug */
/*  padding: 3px 1px; */
  margin:0;
/*  border: 1px solid #f00; */
/*  background: #999; */
  text-decoration: none;
}

#menuH ul li a:link, #menuH ul li a:visited {
/*  color: #fff; */
}

#menuH ul li a:hover {
/*  background: #ccc; */
  color: #F00;
/* border-color: #000; */
}

/* ----------------------------------------
   Menu Construído através de listas. Baseado em:
   http://www.maujor.com/tutorial/tecmenu.php e
   http://www.tanfa.co.uk/css/examples/css-dropdown-menus.asp
---------------------------------------- */

/* Tamanho, Fonte, Cor, Borda do MenuL */
#menuL {
  width: 12em;
  background: #999;
  font-size: 11px/16px;
  font-weight: bold;
}

/* Caixa do Menu OL */
#menuL ol {
  list-style: none;
  margin: 0;
  padding: 0;
}

/* Caixa dos Itens do Menu UL - Fica dentro da caixa OL */
#menuL ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/* Titulo do Menu OL - ordenado */
#menuL ol li {
  color: #fff;
  background: #000;
  text-transform: uppercase;
  text-align: center;
}

/* Items dentro do Menu OL */
#menuL ol li li {
  color: #fff;
  background: #000;
  text-transform: none;
  text-align: left;
}

/* Links dos Menus */
#menuL ol li li a {
  display: block;
  border-width: 1px;
  border-style: solid;
  border-color: #ccc #888 #555 #bbb;
  margin: 0;
  padding: 2px 3px;
}

/* Itens do Menu OL - Links */
#menuL a {
  color: #000;
  background: #efefef;
  text-decoration: none;
}

/* Itens do Menu OL - Links com o mouse em cima */
#menuL a:hover {
  color: #a00;
  background: #fff;
}

/* Posicionamento dos Itens - "Mágica" */
#menuL li {
  position: relative;
}

#menuL ol ul ul {
  position: absolute;
  top: 0;
  left: 100%;
  width: 100%;
}

/* Magia CSS */
div#menuL ol ul ul,
div#menuL ol ul ul ul,
div#menuL ol ul li:hover ul ul,
div#menuL ol ul ul li:hover ul ul
{display: none;}

/* Magia CSS */
div#menuL ol ul li:hover ul,
div#menuL ol ul ul li:hover ul,
div#menuL ol ul ul ul li:hover ul
{display: block;}

/* Corrige o espaço deixado pelos parágrafos */
div#menuL p {display:inline;}
</style>

<!-- Internet Explorer CSS Fixes -->
<!--[if IE]>
  <style type="text/css" media="screen">
    body {  behavior: url(http://wiki.softwarelivre.org/pub/TWikiBar/FreeSkinCSS/csshover.htc); font-size: 100%;} 
    #menuL ol li { float: left; width: 100%; }
    #menuL ol li a { height: 1%; }
  </style>
<![endif]-->


<!--GENERATED_HEADERS--><!-- TABLEPLUGIN_table1 --> <style type="text/css" media="all">
.foswikiTable#table1 th {background-color:#0000FF;}
.foswikiTable#table1 th.foswikiSortedCol {background-color:#0000FF;}
.foswikiTable#table1 th {color:#FFFF00;}
.foswikiTable#table1 th a:link {color:#FFFF00;}
.foswikiTable#table1 th a:visited {color:#FFFF00;}
.foswikiTable#table1 th a:link font {color:#FFFF00;}
.foswikiTable#table1 th a:visited font {color:#FFFF00;}
.foswikiTable#table1 th a:hover {color:#0000FF;background-color:#FFFF00;}
.foswikiTable#table1 th a:hover font {color:#0000FF;background-color:#FFFF00;}
.foswikiTable#table1 tr.foswikiTableRowdataBg0 td {background-color:#BBBBBB;}
.foswikiTable#table1 tr.foswikiTableRowdataBg1 td {background-color:#DDDDDD;}
.foswikiTable#table1 tr.foswikiTableRowdataBg0 td.foswikiSortedCol {background-color:#BBBBBB;}
.foswikiTable#table1 tr.foswikiTableRowdataBg1 td.foswikiSortedCol {background-color:#DDDDDD;}
.foswikiTable#table1 td {padding:4px;}
.foswikiTable#table1 th {padding:4px;}
</style>
<div class="geral">
<div class="cabecalho">
	 <div class="padraocabecalho">		
<h3><a name="Aqui_temos_um_livro_livre_e_comp"></a> Aqui temos um <em>livro
 livre</em> e completo sobre <em>Shell</em> </h3>
<h4><a name="Os_sedentos_do_saber_livre_s_o_m"></a> Os sedentos do 
"saber livre" são muito benvindos. </h4>
<!-- <span class="foswikiNewLink">SiteSearch<a href="/bin/edit/TWikiBar/SiteSearch?topicparent=TWikiBar.TWikiBarPapo005" rel="nofollow" title="Criar este tópico">?</a></span> Google -->
<form method="get" action="http://www.google.com/search" target="_blank">
<input name="ie" value="UTF-8" type="hidden">
<input name="oe" value="UTF-8" type="hidden">
<input name="q" size="10" maxlength="255" type="text">
<input name="btnG" value="Procure comando no Botequim" type="submit">
<input name="domains" value="wiki.softwarelivre.org" type="hidden">
<input name="sitesearch" 
value="twiki.softwarelivre.org/bin/view/TWikiBar" checked="checked" 
type="hidden">
</form>
<!-- <span class="foswikiNewLink">SiteSearch<a href="/bin/edit/TWikiBar/SiteSearch?topicparent=TWikiBar.TWikiBarPapo005" rel="nofollow" title="Criar este tópico">?</a></span> Google -->
<p>
	 </p></div>
	 <div class="barranavegacao">		<div id="menuH"> <ul>
<li> [ 12 Apr 2010 - 22:00 ] <strong>Links Amigos</strong> 
</li> <li> <a style="" target="_blank" 
href="http://br-linux.org/linux/?q=node/2037" title="Linux Levado à 
Sério (Abrirá em nova Aba)">BR-Linux</a>
</li> <li> <a style="" target="_blank" 
href="http://www.vivaolinux.com.br/" title="Viva o Linux (Abrirá em nova
 Aba)">Viva o Linux</a>
</li> <li> <a style="" target="_blank" 
href="http://www.dicas-l.unicamp.br/" title="Dicas-L - Rubens (Abrirá em
 nova Aba)">Dicas-L</a>
</li> <li> <a style="" target="_blank" 
href="http://www.aurelio.net/shell" title="Por que programar tem que ser
 divertido (Abrirá em nova Aba)">Aurelio</a>
</li> <li> <a style="" target="_blank" href="http://www.thobias.org/" 
title=" Thobias login (Abrirá em nova Aba)">Thobias</a>
</li></ul> 
</div>
	 </div>
  </div>
  <div class="lateral">	 
<div id="menuL"> <ol>
<li> TWiki Básico <ul>
<li> <a style="" href="http://wiki.softwarelivre.org/TWikiBar/WebHome" 
class="foswikiCurrentWebHomeLink" title="Ir para a Página Inicial dessa 
Área!"><img src="TWikiBarPapo005_arquivos/home.gif" alt="HOME" 
width="16" height="16"> Página Inicial</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/WebChanges" title="Mostrar 
as páginas (tópicos) alterados mais recentemente!"><img 
src="TWikiBarPapo005_arquivos/recentchanges.gif" alt="INDEX" width="16" 
height="16"> Últimas Alterações</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/WebIndex" title="Indice 
Analítico!"><img src="TWikiBarPapo005_arquivos/index.gif" alt="INDEX" 
width="16" height="16"> Índice</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/WebSearch" title="Permite 
que você procure um texto qualquer em todos os tópicos. Se desejar pode 
utilizar expressões regulares também!"><img 
src="TWikiBarPapo005_arquivos/searchtopic.gif" alt="SEARCH" width="16" 
height="16"> Procura</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/WebStatistics" title="Umas 
estatísticas geradas pelo próprio TWiki via crontab."><img 
src="TWikiBarPapo005_arquivos/statistics.gif" alt="STATISTICS" 
width="16" height="16"> Estatísticas de Uso</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/WebNotify" title="Permite 
que você seja informado se alguma página for alterada."><img 
src="TWikiBarPapo005_arquivos/notify.gif" alt="NOTIFY" width="16" 
height="16"> Aviso de Atualização</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/WebMap" title="Mostra um 
Mapa do Site Gerado Automagicamente.">Mapa do Site</a>
</li></ul> 
</li> <li> TWiki Avançado <ul>
<li> <strong><a style="" 
href="http://wiki.softwarelivre.org/System/UserRegistration" title="Se 
você quer contribuir com este site.">Registre-se</a></strong>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/WebPreferences" 
title="Configurações Gerais desta Área.">Configurações Gerais</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/Main/TWikiBarGroup" title="Entre em 
Contato Conosco">Quem Somos</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/System/TextFormattingRules" 
title="Dicas de Formatação">Regras de Formatação</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/System/DocumentGraphics" 
title="Dicas Gráficas">Biblioteca Gráfica</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/System/SmiliesPlugin" title="Use os 
Smiles Simples.">Carinhas Gráficas</a>
</li></ul> 
</li> <li> <a 
href="http://wiki.softwarelivre.org/TWikiBar/ProjetoGrafico">Projeto 
Gráfico</a> <ul>
<li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/FreeSkinPreTopic" title="O 
que vem ANTES do Tópico">Pré Tópico</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/FreeSkinPosTopic" title="O 
que vem DEPOIS do Tópico">Pós Tópico</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/FreeSkinMenu" title="Este 
próprio menu">Menu Lateral</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/FreeSkinBarraNavegacao" 
title="Links Interessantes e Recomendados">Menu de Navegação</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/FreeSkinCSS" 
title="Definições do CSS utilizado">CSS Utilizado</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/FreeSkinControlesEdicao" 
title="Controles de Edição, Anexar, etc">Botões Especiais</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/FreeSkinVoceEstaAqui" 
title="Indicador de Onde Estamos dentro da Web">Indica Onde Estamos</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/FreeSkinPadraoCabecalho" 
title="Definição do Cabeçalho Padronizado">Cabeçalho Padrão</a>
</li> <li> <a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/FreeSkinCopyRight" 
title="Informações de Copy Right/Left">Copy Right/Left</a>
</li></ul> 
</li></ol> 
</div>
  </div>
  <div class="corpo">
	 <div class="localizacao">		Você está aqui: <a 
href="http://wiki.softwarelivre.org/TWikiBar/WebHome" 
class="foswikiCurrentWebHomeLink">TWikiBar</a>  &gt; <a 
href="http://wiki.softwarelivre.org/TWikiBar/BatePapos">BatePapos</a> 
&gt; <a href="http://wiki.softwarelivre.org/TWikiBar/TWikiBarPapo005" 
class="foswikiCurrentTopicLink">TWikiBarPapo005</a>
	 </div>
	 <div class="edicao">		Controles: <a style="" 
href="http://wiki.softwarelivre.org/bin/edit/TWikiBar/TWikiBarPapo005?nocache=Apr13010017&amp;skin=pattern"
 target="_top" title="Editar este tópico"><img 
src="TWikiBarPapo005_arquivos/edittopic.gif" alt="EDITAR" width="16" 
height="16"></a>
<a style="" 
href="http://wiki.softwarelivre.org/bin/attach/TWikiBar/TWikiBarPapo005?skin=pattern"
 target="_top" title="Anexar Imagens ou Arquivos"><img 
src="TWikiBarPapo005_arquivos/attachfile.gif" alt="ANEXAR" width="16" 
height="16"></a>
<a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/TWikiBarPapo005?raw=on&amp;skin=pattern"
 target="_top" title="Visualizar o Código Fonte"><img 
src="TWikiBarPapo005_arquivos/cachetopic.gif" alt="MAIS" width="16" 
height="16"></a>
<a style="" 
href="http://wiki.softwarelivre.org/bin/oops/TWikiBar/TWikiBarPapo005?template=oopsmore&amp;param1=15&amp;param2=15&amp;skin=pattern"
 target="_top" title="Renomear, Mover, Apagar, etc..."><img 
src="TWikiBarPapo005_arquivos/tip.gif" alt="MAIS" width="16" height="16"></a>
<a style="" 
href="http://wiki.softwarelivre.org/bin/rdiff/TWikiBar/TWikiBarPapo005?skin=pattern"
 target="_top" title="Ver Todas Alterações"><img 
src="TWikiBarPapo005_arquivos/recentchanges.gif" alt="ALTERACOES" 
width="16" height="16"></a>
<a style="" 
href="http://wiki.softwarelivre.org/TWikiBar/TWikiBarPapo005?skin=freeprint"
 target="_top" title="Preparar para Impressão"><img 
src="TWikiBarPapo005_arquivos/printtopic.gif" alt="IMPRIMIR" width="16" 
height="16"></a>
- Última Atualização: [01 Aug 2009 - V.15]
	 </div>
	 <div class="topico"><h1><a name="Papo_de_Botequim_Parte_V"></a>  Papo 
de Botequim Parte V </h1>
<p>
<a name="foswikiTOC"></a></p><div class="foswikiToc"> <ul>
<li> <a href="#Comandos_de_Loop_ou_la_o"> Comandos de Loop (ou laço)</a>
 <ul>
<li> <a href="#O_comando_for"> O comando for</a> <ul>
<li> <a href="#Primeira_sintaxe_do_comando_for"> Primeira sintaxe do 
comando for</a> <ul>
<li> <a href="#Inter_Field_Separator_Tabajara_I"> Inter Field Separator 
Tabajara (IFS)</a>
</li></ul> 
</li> <li> <a href="#Segunda_sintaxe_do_comando_for"> Segunda sintaxe do
 comando for</a>
</li> <li> <a href="#Terceira_sintaxe_do_comando_for"> Terceira sintaxe 
do comando for</a>
</li></ul> 
</li></ul> 
</li></ul> 
</div>
<p>
&nbsp;&nbsp;&nbsp;&nbsp; - Fala cara! E as idéias estão em ordem? Já 
fundiu a cuca ou você ainda aguenta mais <em>Shell</em>?
</p><p>
&nbsp;&nbsp;&nbsp;&nbsp; - Guento! Tô gostando muito! Gostei tanto que 
até caprichei no exercício que você passou. Lembra que você me pediu 
para fazer um programa que receberia como parâmetro o nome de um arquivo
 e que quando executado salvaria este arquivo com o nome original 
seguido de um til (<code>~</code>) e colocaria este arquivo dentro do <code>vi</code>?
</p><p>
&nbsp;&nbsp;&nbsp;&nbsp; - Claro que lembro, me mostre e explique como 
você fez.
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ cat vira<font 
color="#ffffff">
#!/bin/bash
#
#  vira - vi resguardando arquivo anterior
#         == =            =
</font><p>
<font color="#ffffff"># Verificando se foi passado 1 parametro
if  [ "$#" -ne 1 ]
then
    echo "Erro -&gt; Uso: $0 <arquivo>"
    exit 1
fi
</arquivo></font></p><p>
<font color="#ffffff">Arq=$1
# Caso o arquivo não exista, nao ha copia para ser salva
if  [ ! -f "$Arq" ]
then
    vi $Arq
    exit 0
fi
</font></p><p>
<font color="#ffffff"># Se nao puder alterar o arquivo vou usar o vi 
para que?
if  [ ! -w "$Arq" ]
then
    echo "Voce nao tem direito de gravacao em $Arq"
    exit 2
fi
</font></p><p>
<font color="#ffffff"># Ja que esta tudo OK, vou salvar a copia e chamar
 o vi
cp -f $Arq $Arq~
vi $Arq
exit 0</font>
</p></div>
<p>
&nbsp;&nbsp;&nbsp;&nbsp; - É, beleza! Mas me diz uma coisa: porque você 
terminou o programa com um <code>exit 0</code>?
</p><p>
&nbsp;&nbsp;&nbsp;&nbsp; - Ahhh! Eu descobri que o número após o <code>exit</code>
 resultará no código de retorno do programa (o <code>$?</code>, 
lembra?), e desta forma, como foi tudo bem sucedido, ele encerraria com o
 <code>$? = 0</code>. Porém se você observar, verá que caso o programa 
não tenha recebido o nome do arquivo ou caso o operador não tivesse 
direito de gravação sobre este arquivo, o código de retorno (<code>$?</code>)
 seria diferente do zero.
</p><p>
&nbsp;&nbsp;&nbsp;&nbsp; - Grande garoto, aprendeu legal, mas é bom 
deixar claro que <code>exit 0</code>, simplesmente <code>exit</code> ou 
não colocar <code>exit</code>, produzem igualmente um código de retorno (<code>$?</code>)
 igual a zero. Agora vamos falar sobre as instruções de <em>loop</em> ou
 laço, mas antes vou passar o conceito de bloco de programa.
</p><p>
Até agora já vimos alguns blocos de programa. Quando te mostrei um 
exemplo para fazer um <code>cd</code> para dentro de um diretório que 
era assim:
</p><p>
</p><pre>cd lmb 2&gt; /dev/null ||
    {
    mkdir lmb
    cd lmb
    }
</pre>
<p>
O fragmento contido entre as duas chaves (<code>{}</code>), forma um 
bloco de comandos. Também neste exercício que acabamos de ver, em que 
salvamos o arquivo antes de editá-lo, existem vários blocos de comandos 
compreendidos entre os <code>then</code> e os <code>fi</code> do <code>if</code>.
</p><p>
Um bloco de comandos também pode estar dentro de um <code>case</code>, 
ou entre um <code>do</code> e um <code>done</code>.
</p><p>
&nbsp;&nbsp;&nbsp;&nbsp; - Peraí Julio, que <code>do</code> e <code>done</code>
 é esse, não me lembro de você ter falado nisso e olha estou prestando 
muita atenção...
</p><p>
&nbsp;&nbsp;&nbsp;&nbsp; - Pois é, ainda não havia falado porque não 
havia chegado o momento propício. Todas as instruções de <em>loop</em> 
ou laço, executam os comandos do bloco compreendido entre o <code>do</code>
 e o <code>done</code>.
</p><p>
</p><h2><a name="Comandos_de_Loop_ou_la_o"></a> Comandos de <em>Loop</em>
 (ou laço) </h2>
<p>
As instruções de <em>loop</em> ou laço são o <code>for</code>, o <code>while</code>
 e o <code>until</code> que passarei a te explicar uma-a-uma a partir de
 agora.
</p><p>
</p><h3><a name="O_comando_for"></a> O comando for </h3>
<p>
Se você está habituado a programar, certamente já conhece o comando <code>for</code>,
 mas o que você não sabe é que o <code>for</code>, que é uma instrução 
intrinseca do <em>Shell</em> (isto significa que o código fonte do 
comando faz parte do código fonte do <em>Shell</em>, ou seja em bom 
programês é um <em>built-in</em>), é muito mais poderoso que os seus 
correlatos das outras linguagens.
</p><p>
Vamos entender a sua sintaxe, primeiramente em português e depois como 
funciona no duro.
</p><pre>    para var em val1 val2 ... valn
    faça
        cmd1
        cmd2
        cmdn
    feito
</pre>
<p>
Onde a variável <code>var</code> assume cada um dos valores da lista <code>val1
 val2 ... valn</code> e para cada um desses valores executa o bloco de 
comandos formado por <code>cmd1</code>, <code>cmd2</code> e <code>cmdn</code>
</p><p>
Agora que já vimos o significado da instrução em português, vejamos a 
sintaxe correta:
</p><p>
</p><h4><a name="Primeira_sintaxe_do_comando_for"></a> Primeira sintaxe 
do comando for </h4>
<p>
</p><pre>    for var in val1 val2 ... valn
    do
        cmd1
        cmd2
        cmdn
    done
</pre>
<p>
Vamos direto para os exemplos, para entender direito o funcionamento 
deste comando. Vamos escrever um <em>script</em> para listar todos os 
arquivos do nosso diretório separados por dois-pontos, mas primeiro 
veja:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ echo *<font color="#ffffff">
ArqDoDOS.txt1 confuso incusu logado musexc musicas musinc muslist</font>
</div>
<p>
Isto é, o <em>Shell</em> viu o asterisco (<code>*</code>) expandindo-o 
com o nome de todos os arquivos do diretório e o comando <code>echo</code>
 jogou-os para a tela separados por espaços em branco. Visto isso vamos 
ver como resolver o problema a que nos propuzemos:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ cat testefor1<font 
color="#ffffff">
#!/bin/bash
# 1o. Prog didático para entender o for
</font><p>
<font color="#ffffff">for Arq in *
do
    echo -n $Arq:     # A opcao -n eh para nao saltar linha
done</font>
</p></div>
<p>
Então vamos executá-lo:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ testefor1<font 
color="#ffffff">
ArqDoDOS.txt1:confuso:incusu:logado:musexc:musicas:musinc:muslist:</font>$
</div>
<p>
Como você viu o <em>Shell</em> transformou o asterisco (que odeia ser 
chamado de asterístico) em uma lista de arquivos separados por espaços 
em branco. quando o <code>for</code> viu aquela lista, ele disse: "Opa, 
lista separadas por espaços é comigo mesmo!"
</p><p>
O bloco de comandos a ser executado era somente o <code>echo</code>, que
 com a opção <code>-n</code> listou a variável <code>$Arq</code> seguida
 de dois-pontos (<code>:</code>), sem saltar a linha. O cifrão (<code>$</code>)
 do final da linha da execução é o <em>prompt</em>. que permaneceu na 
mesma linha também em função da opção <code>-n</code>.
Outro exemplo simples (por enquanto):
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ cat testefor2<font 
color="#ffffff">
#!/bin/bash
# 2o. Prog didático para entender o for
</font><p>
<font color="#ffffff">for Palavra in Papo de Botequim
do
    echo $Palavra
done</font>
</p></div>
<p>
E executando vem:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ testefor2<font 
color="#ffffff">
Papo
de
Botequim</font>
</div>
<p>
Como você viu, este exemplo é tão bobo e simples como o anterior, mas 
serve para mostrar o comportamento básico do <code>for</code>.
</p><p>
Veja só a força do <code>for</code>: ainda estamos na primeira sintaxe 
do comando e já estou mostrando novas formas de usá-lo. Lá atrás eu 
havia falado que o <code>for</code> usava listas separadas por espaços 
em branco, mas isso é uma meia verdade, era só para facilitar a 
compreensão.
</p><p>
</p><h5><a name="Inter_Field_Separator_Tabajara_I"></a> Inter Field 
Separator Tabajara (IFS) </h5>
<p>
No duro, as listas não são obrigatóriamente separadas por espaços mas 
antes de prosseguir, deixa eu te mostrar como se comporta uma variável 
do sistema chamada de <code>$IFS</code>. Repare seu conteúdo:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ echo "$IFS" | od -h<font 
color="#ffffff">
0000000 0920 0a0a
0000004</font>
</div>
<p>
Isto é, mandei a variável (protegida da interpretação do <em>Shell</em> 
pelas aspas) para um <em>dump</em> hexadecimal (<code>od -h</code>) e 
resultou:
</p><p>
</p><center>
<table id="table1" class="foswikiTable" border="0" cellpadding="4" 
cellspacing="1" rules="rows">
	<thead>
		<tr class="foswikiTableOdd foswikiTableRowdataBgSorted0 
foswikiTableRowdataBg0">
			<th colspan="2" class="foswikiTableCol0 foswikiFirstCol" 
align="center" bgcolor="#0000ff" valign="top"> <font color="#ffff00">Conteúdo
 da Variável $IFS</font> </th>
		</tr>
	</thead>
	<tfoot>
		<tr class="foswikiTableOdd foswikiTableRowdataBgSorted1 
foswikiTableRowdataBg1">
			<td class="foswikiTableCol0 foswikiFirstCol foswikiLast" 
align="center" bgcolor="#dddddd" valign="top"> <code>0a</code> </td>
			<td class="foswikiTableCol1 foswikiLastCol foswikiLast" 
align="center" bgcolor="#dddddd" valign="top"> <code>&lt;ENTER&gt;</code>
 </td>
		</tr>
	</tfoot>
	<tbody>
		<tr class="foswikiTableEven foswikiTableRowdataBgSorted0 
foswikiTableRowdataBg0">
			<td class="foswikiTableCol0 foswikiFirstCol" bgcolor="#bbbbbb" 
valign="top"> &nbsp; <strong>Hexadecimal</strong> &nbsp; </td>
			<td class="foswikiTableCol1 foswikiLastCol" bgcolor="#bbbbbb" 
valign="top"> &nbsp; <strong>Significado</strong> &nbsp; </td>
		</tr>
		<tr class="foswikiTableOdd foswikiTableRowdataBgSorted1 
foswikiTableRowdataBg1">
			<td class="foswikiTableCol0 foswikiFirstCol" align="center" 
bgcolor="#dddddd" valign="top"> <code>09</code> </td>
			<td class="foswikiTableCol1 foswikiLastCol" align="center" 
bgcolor="#dddddd" valign="top"> <code>&lt;TAB&gt;</code> </td>
		</tr>
		<tr class="foswikiTableEven foswikiTableRowdataBgSorted0 
foswikiTableRowdataBg0">
			<td class="foswikiTableCol0 foswikiFirstCol" align="center" 
bgcolor="#bbbbbb" valign="top"> <code>20</code> </td>
			<td class="foswikiTableCol1 foswikiLastCol" align="center" 
bgcolor="#bbbbbb" valign="top"> <code>&lt;ESPAÇO&gt;</code> </td>
		</tr>
	</tbody></table>
</center>
<p>
Onde o último <code>0a</code> foi proveniente do <code>&lt;ENTER&gt;</code>
 dado ao final do comando. Para melhorar a explicação, vamos ver isso de
 outra forma:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ echo ":$IFS:" | cat -vet<font
 color="#ffffff">
: ^I$
:$</font>
</div>
<p>
Preste atenção na dica a seguir para entender a construção deste comando
 cat:
</p><p>
</p><div style="min-height: 121px; margin: 1em; padding: 1em; border: 
1px dashed red; background-color: rgb(255, 255, 204);"><img 
style="float: left; padding: 0px 8px 0px 0px;" 
src="TWikiBarPapo005_arquivos/pinguim_dica.gif" alt="Pinguim com placa 
de dica" align="left">
No comando <code>cat</code>, a opção <code>-e</code> representa o <code>&lt;ENTER&gt;</code>
 como um cifrão (<code>$</code>) e a opção <code>-t</code> representa o <code>&lt;TAB&gt;</code>
 como um <code>^I</code>. Usei os dois-pontos (<code>:</code>) para 
mostrar o início e o fim do <code>echo</code>. E desta forma, mais uma 
vez pudemos notar que os três caracteres estão presentes naquela 
variável.
</div>
<p>
Agora veja você, <code>IFS</code> significa <strong><em>Inter Field 
Separator</em></strong> ou, traduzindo, separador entre campos. Uma vez 
entendido isso, eu posso afirmar (porque vou provar) que o comando <code>for</code>
 não usa listas separadas por espaços em branco, mas sim pelo conteúdo 
da variável <code>$IFS</code>, cujo valor padrão (<em>default</em>) são 
esses caracteres que acabamos de ver. Para comprovarmos isso, vamos 
mostrar um <em>script</em> que recebe o nome do artista como parâmetro e
 lista as músicas que ele executa, mas primeiramente vamos ver como está
 o nosso arquivo <code>musicas</code>:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ cat musicas<font 
color="#ffffff">
album 1^Artista1~Musica1:Artista2~Musica2
album 2^Artista3~Musica3:Artista4~Musica4
album 3^Artista5~Musica5:Artista6~Musica6
album 4^Artista7~Musica7:Artista1~Musica3
album 5^Artista9~Musica9:Artista10~Musica10</font>
</div>
<p>
Em cima deste "leiaute" foi desenvolvido o <em>script</em> a seguir:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ cat listartista<font 
color="#ffffff">
#!/bin/bash
# Dado um artista, mostra as suas musicas
</font><p>
<font color="#ffffff">if  [ $# -ne 1 ]
then
    echo Voce deveria ter passado um parametro
    exit 1
fi
</font></p><p>
<font color="#ffffff">IFS="
:"
</font></p><p>
<font color="#ffffff">for ArtMus in $(cut -f2 -d^ musicas)
do
    echo "$ArtMus" | grep $1 &amp;&amp; echo $ArtMus | cut -f2 -d~
done</font>
</p></div>
<p>
O <em>script</em>, como sempre, começa testando se os parâmetros foram 
passados corretamente, em seguida o <code>IFS</code> foi setado para <code>&lt;ENTER&gt;</code>
 e dois-pontos (<code>:</code>) (como demonstram as aspas em linha 
diferentes), porque é ele que separa os blocos <code>Artistan~Musicam</code>.
 Desta forma, a variável <code>$ArtMus</code> irá receber cada um destes
 blocos do arquivo (repare que o <code>for</code> já recebe os registros
 sem o álbum em virtude do <code>cut</code> na sua linha). Caso encontre
 o parâmetro (<code>$1</code>) no bloco, o segundo <code>cut</code> 
listará somente o nome da música. Vamos executá-lo:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ listartista Artista1<font 
color="#ffffff">
Artista1~Musica1
Musica1
Artista1~Musica3
Musica3
Artista10~Musica10
Musica10</font>
</div>
<p>
Êpa! Aconteceram duas coisas indesejáveis: os blocos também foram 
listados e a <code>Musica10</code> idem. Além do mais, o nosso arquivo 
de músicas está muito simples, na vida real, tanto a música quanto o 
artista têm mais de um nome. Suponha que o artista fosse uma dupla 
sertaneja chamada <em>Perereca &amp; Peteleca</em> (não gosto nem de dar
 a idéia com receio que isso se torne realidade:). Neste caso o <code>$1</code>
 seria Perereca e o resto deste lindo nome seria ignorado na pesquisa.
</p><p>
Para que isso não ocorresse, eu deveia passar o nome do artista entre 
aspas (<code>"</code>) ou alterar <code>$1</code> por <code>$@</code> 
(que significa todos os parâmetros passados), que é a melhor solução, 
mas neste caso eu teria que modificar a crítica dos parâmetros e o <code>grep</code>.
 A nova crítica não seria se eu passei um parâmetro, mas <strong>pelo 
menos</strong> um parâmetro e quanto ao <code>grep</code>, veja só o que
 resultaria após a substituição do <code>$*</code> (que entraria no 
lugar do <code>$1</code>) pelos parâmetros:
</p><p>
</p><pre>    echo "$ArtMus" | grep perereca &amp; peteleca
</pre>
<p>
O que resultaria em erro. O correto seria:
</p><p>
</p><pre>    echo "$ArtMus" | grep -i "perereca &amp; peteleca"
</pre>
<p>
Onde foi colocado a opção <code>-i</code> para que a pesquisa ignorasse 
maiúsculas e minúsculas e as aspas também foram inseridas para que o 
nome do artista fosse visto como uma só cadeia monolítica.
</p><p>
Ainda falta consertar o erro dele ter listado o <code>Artista10</code>. 
Para isso o melhor é dizer ao <code>grep</code> que a cadeia está no 
início de <code>$ArtMus</code> (a expressão regular para dizer que está 
no início é <code>^</code>) e logo após vem um til (<code>~</code>). É 
necessário também que se redirecione a saída do grep para <code>/dev/null</code>
 para que os blocos não sejam mais listados. Veja então a nova (e 
definitiva) cara do programa:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ cat listartista<font 
color="#ffffff">
#!/bin/bash
# Dado um artista, mostra as suas musicas
# versao 2
</font><p>
<font color="#ffffff">if  [ $# -eq 0 ]
then
    echo Voce deveria ter passado pelo menos um parametro
    exit 1
fi
</font></p><p>
<font color="#ffffff">IFS="
:"
</font></p><p>
<font color="#ffffff">for ArtMus in $(cut -f2 -d^ musicas)
do
    echo "$ArtMus" | grep -i "^$@~" &gt; /dev/null &amp;&amp; echo 
$ArtMus | cut -f2 -d~
done</font>
</p></div>
<p>
Que executando vem:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ listartista Artista1<font 
color="#ffffff">
Musica1
Musica3</font>
</div>
<p>
</p><p>
</p><h4><a name="Segunda_sintaxe_do_comando_for"></a> Segunda sintaxe do
 comando for </h4>
<p>
</p><p>
</p><pre>    for var
    do
        cmd1
        cmd2
        cmdn
    done
</pre>
<p>
&nbsp;&nbsp;&nbsp;&nbsp; - Ué, sem o <code>in</code> como ele vai saber 
que valor assumir?
</p><p>
&nbsp;&nbsp;&nbsp;&nbsp; - Pois é, né? Esta construção a primeira vista 
parece xquisita mas é bastante simples. Neste caso, <code>var</code> 
assumirá um-a-um cada um dos parâmetros passados para o progama.
</p><p>
Vamos logo aos exemplos para entender melhor. Vamos fazer um <em>script</em>
 que receba como parâmetro um monte de músicas e liste seus autores:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ cat listamusica<font 
color="#ffffff">
#!/bin/bash
# Recebe parte dos nomes de musicas como parametro e
# lista os interpretes. Se o nome for composto, deve
# ser passado entre aspas.
# ex. "Eu nao sou cachorro nao" "Churrasquinho de Mae"
#
if  [ $# -eq 0 ]
then
    echo Uso: $0 musica1 [musica2] ... [musican]
    exit 1
fi
IFS="
:"
for Musica
do
    echo $Musica
    Str=$(grep -i "$Musica" musicas) ||
        {
        echo "    Não encontrada"
        continue
        }
    for ArtMus in $(echo "$Str" | cut -f2 -d^)
    do
        echo "    $ArtMus" | grep -i "$Musica" | cut -f1 -d~
    done
done</font>
</div>
<p>
Da mesma forma que os outros, começamos o exercício com uma crítica 
sobre os parâmetros recebidos, em seguida fizemos um <code>for</code> em
 que a variável <code>$Musica</code> receberá cada um dos parâmetros 
passados, colocando em <code>$Str</code> todos os álbuns que contém as 
músicas passadas. Em seguida, o outro <code>for</code> pega cada bloco <code>Artista~Musica</code>
 nos registros que estão em <code>$Str</code> e lista cada artista que 
execute aquela música.
</p><p>
Como sempre vamos executá-lo para ver se funciona mesmo:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ listamusica musica3 Musica4 
"Eguinha Pocotó"<font color="#ffffff">
musica3
    Artista3
    Artista1
Musica4
    Artista4
Eguinha Pocotó
    Não encontrada</font>
</div>
<p>
A listagem ficou feinha porque ainda não sabemos formatar a saída, mas 
qualquer dia desses, quando você souber posicionar o cursor, fazer 
negrito, trabalhar com cores e etc, faremos esta listagem novamente 
usando todas estas perfumarias e ela ficará muito <em>fashion</em>.
</p><p>
A esta altura dos acontecimentos você deve estar se perguntando: "E 
aquele <code>for</code> tradicional das outras linguagens em que ele sai
 contando a partir de um número, com um determinado incremento até 
alcançar uma condição?"
</p><p>
E é aí que eu te respondo: "Eu não te disse que o nosso <code>for</code>
 é mais porreta que os outros?" Para fazer isso existem duas formas: 
</p><p>
1 - Com a primeira sintaxe que vimos, como nos exemplos a seguir direto 
no <em>prompt</em>:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ for i in $(seq 9)
&gt; do
&gt;     echo -n "$i "
&gt; done<font color="#ffffff">
1 2 3 4 5 6 7 8 9</font>
</div>
<p>
Neste a variável <code>i</code> assumiu os inteiros de 1 a 9 gerados 
pelo comando <code>seq</code> e a opção <code>-n</code> do <code>echo</code>
 foi usada para não saltar linha a cada número listado (sinto-me 
ecologicamente correto por não gastar um monte de papel da revista 
quando isso pode ser evitado). Ainda usando o <code>for</code> com <code>seq</code>:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ for i in $(seq 3 9)
&gt; do
&gt;     echo -n "$i "
&gt; done<font color="#ffffff">
4 5 6 7 8 9</font>
</div>
<p>
Ou ainda na forma mais completa do <code>seq</code>:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ for i in $(seq 0 3 9)
&gt; do
&gt;     echo -n "$i "
&gt; done<font color="#ffffff">
0 3 6 9</font>
</div>
<p>
2 &#8211; A outra forma de fazer o desejado é com uma sintaxe muito semelhante
 ao <code>for</code> da linguagem C, como veremos a seguir.
</p><p>
</p><p>
</p><h4><a name="Terceira_sintaxe_do_comando_for"></a> Terceira sintaxe 
do comando for </h4>
<p>
</p><p>
</p><pre>    for ((var=ini; cond; incr))
    do
        cmd1
        cmd2
        cmdn
    done
</pre>
<p>
Onde:
</p><p>
<code>var=ini</code> -   Significa que a variável <code>var</code> 
começará de um valor inicial <em>ini</em>;<br> 
<code>cond&nbsp;&nbsp;&nbsp;</code>    -   Siginifica que o <em>loop</em>
 ou laço do <code>for</code> será executado enquanto <code>var</code> 
não atingir a condição <code>cond</code>;<br> 
<code>incr&nbsp;&nbsp;&nbsp;</code>    -   Significa o incremento que a 
variável <code>var</code> sofrerá em cada passada do <em>loop</em>.
</p><p>
Como sempre vamos aos exemplos que a coisa fica mais fácil:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ for ((i=1; i&lt;=9; i++))
&gt; do
&gt;     echo -n "$i "
&gt; done<font color="#ffffff">
1 2 3 4 5 6 7 8 9</font>
</div>
<p>
Neste caso a variável <code>i</code> partiu do valor inicial <code>1</code>,
 o bloco de comando (neste caso somente o <code>echo</code>) será 
executado enquanto <code>i</code> menor ou igual (<code>&lt;=</code>) a <code>9</code>
 e o incremento de <code>i</code> será de <code>1</code> a cada passada 
do <em>loop</em>.
</p><p>
Repare que no <code>for</code> propriamente dito (e não no bloco de 
comandos) não coloquei um cifrão (<code>$</code>) antes do <code>i</code>,
 e a notação para incrementar (<code>i++</code>) é diferente do que 
vimos até agora. Isto é porque o uso de parênteses duplos (assim como o 
comando <code>let</code>) chama o interpretador aritmético do <em>Shell</em>,
 que é mais tolerante.
</p><p>
Como me referi ao comando <code>let</code>, só para mostrar como ele 
funciona e a versatilidade do <code>for</code>, vamos fazer a mesma 
coisa, porém omitindo a última parte do escopo do <code>for</code>, 
passando-a para o bloco de comandos.
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ for ((; i&lt;=9;))
&gt; do
&gt;     let i++
&gt;     echo -n "$i "
&gt; done<font color="#ffffff">
1 2 3 4 5 6 7 8 9</font>
</div>
<p>
Repare que o incremento saiu do corpo do <code>for</code> e passou para o
 bloco de comandos, repare também que quando usei o <code>let</code>, 
não foi necessário sequer inicializar a variável <code>$i</code>. Veja 
só os comandos a seguir dados diretamente no <em>prompt</em> para 
mostrar o que acabo de falar:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ echo $j
<p>
$ let j++
$ echo $j<font color="#ffffff"> 
1</font>
</p></div>
<p>
Ou seja, a variável <code>$j</code> sequer existia e no primeiro <code>let</code>
 assumiu o valor <code>0</code> (zero) para, após o incremento, ter  o 
valor <code>1</code>.
</p><p>
Veja só como as coisas ficam simples:
</p><p>
</p><div style="font-family: Courier,&quot;Courier 
New&quot;,&quot;Lucida Console&quot;,&quot;Bitstream Vera Sans 
Mono&quot;,Monaco,monospace; white-space: pre; margin: 1em 0.5em; 
border: 1px none; padding: 1.5em 1em; overflow: auto; font-size: 100%; 
line-height: 1em; color: yellow; font-weight: bold; background: none 
no-repeat scroll right top rgb(0, 0, 0);">$ for arq in *
&gt; do
&gt;     let i++
&gt;     echo "$i -&gt; $Arq"
&gt; done<font color="#ffffff">
1 -&gt; ArqDoDOS.txt1
2 -&gt; confuso
3 -&gt; incusu
4 -&gt; listamusica
5 -&gt; listartista
6 -&gt; logado
7 -&gt; musexc
8 -&gt; musicas
9 -&gt; musinc
10 -&gt; muslist
11 -&gt; testefor1
12 -&gt; testefor2</font>
</div>
<p>
&nbsp;&nbsp;&nbsp;&nbsp; - Pois é amigo, tenho certeza que você já tomou
 um xarope do comando <code>for</code>. Por hoje chega, na próxima vez 
que nos encontrarmos falaremos sobre outras instruções de <em>loop</em>,
 mas eu gostaria que até lá você fizesse um pequeno <em>script</em> para
 contar a quantidade de palavras de um arquivo texto, cujo nome seria 
recebido por parâmetro.
</p><p>
OBS: Essa contagem tem de ser feita usando o comando for para se 
habituar ao seu uso. Não vale usar o <code>wc -w</code>.
</p><p>
&nbsp;&nbsp;&nbsp;&nbsp; - Aê Chico! Traz a saideira.
</p><p>
Vou aproveitar também para mandar o meu jabá: diga para os amigos que 
quem estiver afim de fazer um curso porreta de programação em <em>Shell</em>
 que mande um e-mail para a nossa <a 
href="mailto:contato@clavis.com.br?Subject=Curso%20de%20Shell%20com%20Julio%20Neves">gerencia
 de treinamento</a> para informar-se. 
</p><p>
Qualquer dúvida ou falta de companhia para um chope ou até para falar 
mal dos políticos é só mandar um e-mail para <a 
href="mailto:julioneves@openoffice.org?Subject=D%C3%BAvidas%20Papo%20de%20Botequim">mim</a>.
 
</p><p>
Valeu!
	 </p></div><!-- fecha div topico -->
	 <div class="rodape">		<br>  <a 
href="http://creativecommons.org/licenses/by-nc-sa/2.0/br/" 
target="_blank"><img 
src="TWikiBarPapo005_arquivos/Logo_CC-by-nc-sa_pequeno.png" alt="Licença
 Creative Commons - Atribuição e Não Comercial" title="Licença Creative 
Commons - Atribuição e Não Comercial (pequeno)" border="0"></a> (CC) 
2010 Pelos <a href="http://wiki.softwarelivre.org/Main/TWikiBarGroup">Frequentadores
 do Bar do Júlio Neves</a>.<br> 
Todo o conteúdo desta página pode ser utilizado segundo os termos da <a 
href="http://creativecommons.org/licenses/by-nc-sa/2.0/br/">Creative 
Commons License</a>: Atribuição-UsoNãoComercial-PermanênciaDaLicença.
	 </div>
  </div><!-- fecha div corpo -->
</div><!-- fecha div geral -->
</body></html>